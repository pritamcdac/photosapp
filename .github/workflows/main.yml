name: Mobile CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  android:
    name: Android Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install JS deps
        run: npm install

      # ðŸ”‘ Decode keystore
      - name: Decode Keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks

      # ðŸ”‘ Configure Gradle signing
      - name: Configure Gradle signing
        working-directory: android
        run: |
          echo "MYAPP_UPLOAD_STORE_FILE=app/upload-keystore.jks" >> gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}" >> gradle.properties
          cat gradle.properties

      - name: Make gradlew executable
        working-directory: android
        run: chmod +x gradlew
     
      - name: Build AAB
        run: cd android && ./gradlew bundleRelease --stacktrace

      - name: Upload to Play Console
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.cybage.photosapp
          releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: draft


  ios:
    name: iOS Build & Upload
    runs-on: macos-latest
    needs: android

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_15.4.app

      - name: Install Dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Decode Provisioning Profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.PROVISIONING_PROFILE }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/CybageCI.mobileprovision

      - name: Build iOS Archive
        run: |
          xcodebuild \
            -workspace ios/PhotosApp.xcworkspace \
            -scheme PhotosApp \
            -configuration Release \
            -archivePath $PWD/build/PhotosApp.xcarchive \
            clean archive \
            DEVELOPMENT_TEAM=${{ secrets.APPLE_TEAM_ID }} \
            PROVISIONING_PROFILE_SPECIFIER="CybageCI" \
            CODE_SIGN_IDENTITY="Apple Distribution"

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath $PWD/build/PhotosApp.xcarchive \
            -exportOptionsPlist ios/ExportOptions.plist \
            -exportPath $PWD/build

      - name: Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: build/PhotosApp.ipa
          issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          api-key-id: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          api-private-key: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
